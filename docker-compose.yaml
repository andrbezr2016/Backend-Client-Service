version: '3'
services:
  postgres:
    image: postgres:15
    container_name: postgres
    hostname: postgres
    ports:
      - '5555:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DB=products,tariffs
    volumes:
      - ./init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh
      - postgresql_data:/var/lib/postgresql/data
    restart: always
    networks:
      - my-network
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - my-network
  kafka:
    image: confluentinc/cp-kafka:6.2.0
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:29092, EXTERNAL_SAME_HOST://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL_SAME_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    networks:
      - my-network
  akhq:
    image: tchiotludo/akhq:0.24.0
    container_name: kafka-ui
    hostname: akhq
    depends_on:
      - kafka
    ports:
      - '8090:8080'
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            my-kafka-cluster:
              properties:
                bootstrap.servers: 'kafka:29092'
    networks:
      - my-network

volumes:
  postgresql_data:
    driver: local

networks:
  my-network:
    driver: bridge